{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome Javascript Sejarah Javascript JavaScript dibuat dan didesain oleh Brandan Eich, seorang karyawan Netscape, pada tahun 1995. Bahasa pemrograman ini mulanya disebut Mocha, kemudian diganti ke Mona, lalu menjadi LiveScript sebelum akhirnya resmi menyandang nama JavaScript. Versi pertama dari bahasa ini hanya terbatas di kalangan Netscape saja. Fungsionalitas yang ditawarkan dari bahasa pemrograman inipun terbatas. Namun, JavaScript terus dikembangkan oleh komunitas developer yang tak pernah lelah mengerjakan bahasa pemrograman ini. Pada tahun 1996, JavaScript secara resmi disebut sebagai ECMAScript, di mana ECMAScript 2 diluncurkan pada tahun 1998 dan ECMAScript 3 diperkenalkan pada tahun 1999. ECMAScript tersebut dikembangkan hingga akhirnya menjadi JavaScript sebagaimana yang kita kenal saat ini. Tak hanya lintas browser, JavaScript juga bisa digunakan di berbagai perangkat, termasuk perangkat mobile dan desktop komputer. Pengertian Javascript Javascript adalah bahasa pemrograman tingkat tinggi atau dinamis. JavaScript populer di internet dan dapat bekerja di sebagian besar penjelajah web populer seperti Google Chrome, Internet Explorer (IE), Mozilla Firefox, Netscape dan Opera .namun dianjurkan untuk menggunakan google chrome karena ada beberapa sintak js yang tidak teringtegrasi dengan browser lainnya. Kode JavaScript dapat disisipkan dalam halaman web menggunakan tag script. JavaScript merupakan salah satu teknologi inti World Wide Web selain HTML dan CSS. JavaScript membantu membuat halaman web interaktif dan merupakan bagian aplikasi web yang esensial. Awalnya hanya diimplementasi sebagai client-side dalam penjelajah web, kini engine JavaScript disisipkan ke dalam perangkat lunak lain seperti dalam server-side dalam server web dan basis data, dalam program non web seperti perangkat lunak pengolah kata dan pembaca PDF, dan sebagai runtime environment yang memungkinkan penggunaan JavaScript untuk membuat aplikasi desktop maupun mobile. Pentingnya Javascript Dalam sebuah analogi robot, javascript itu mempengaruhi pola fungsi semuanya, seperti Berdasarkan gambar diatas, bisa kita ambil kesimpulan yaitu dalam sebuah analogi robot HTML diibaratkan dengan kerangka robot, yang hanya terdiri dari kawat-kawat (konten halaman web) CSS diibaratkan dengan desain kerangka, seperti baju, topeng dan lain-lain (tata letak halaman web) JS diibaratkan dengan otak yang mampu bergerak dinamis (perilaku halaman web) SILABUS JS Klik link berikut : silabus js","title":"Welcome Javascript"},{"location":"#welcome-javascript","text":"","title":"Welcome Javascript"},{"location":"#sejarah-javascript","text":"JavaScript dibuat dan didesain oleh Brandan Eich, seorang karyawan Netscape, pada tahun 1995. Bahasa pemrograman ini mulanya disebut Mocha, kemudian diganti ke Mona, lalu menjadi LiveScript sebelum akhirnya resmi menyandang nama JavaScript. Versi pertama dari bahasa ini hanya terbatas di kalangan Netscape saja. Fungsionalitas yang ditawarkan dari bahasa pemrograman inipun terbatas. Namun, JavaScript terus dikembangkan oleh komunitas developer yang tak pernah lelah mengerjakan bahasa pemrograman ini. Pada tahun 1996, JavaScript secara resmi disebut sebagai ECMAScript, di mana ECMAScript 2 diluncurkan pada tahun 1998 dan ECMAScript 3 diperkenalkan pada tahun 1999. ECMAScript tersebut dikembangkan hingga akhirnya menjadi JavaScript sebagaimana yang kita kenal saat ini. Tak hanya lintas browser, JavaScript juga bisa digunakan di berbagai perangkat, termasuk perangkat mobile dan desktop komputer.","title":"Sejarah Javascript"},{"location":"#pengertian-javascript","text":"Javascript adalah bahasa pemrograman tingkat tinggi atau dinamis. JavaScript populer di internet dan dapat bekerja di sebagian besar penjelajah web populer seperti Google Chrome, Internet Explorer (IE), Mozilla Firefox, Netscape dan Opera .namun dianjurkan untuk menggunakan google chrome karena ada beberapa sintak js yang tidak teringtegrasi dengan browser lainnya. Kode JavaScript dapat disisipkan dalam halaman web menggunakan tag script. JavaScript merupakan salah satu teknologi inti World Wide Web selain HTML dan CSS. JavaScript membantu membuat halaman web interaktif dan merupakan bagian aplikasi web yang esensial. Awalnya hanya diimplementasi sebagai client-side dalam penjelajah web, kini engine JavaScript disisipkan ke dalam perangkat lunak lain seperti dalam server-side dalam server web dan basis data, dalam program non web seperti perangkat lunak pengolah kata dan pembaca PDF, dan sebagai runtime environment yang memungkinkan penggunaan JavaScript untuk membuat aplikasi desktop maupun mobile.","title":"Pengertian Javascript"},{"location":"#pentingnya-javascript","text":"Dalam sebuah analogi robot, javascript itu mempengaruhi pola fungsi semuanya, seperti Berdasarkan gambar diatas, bisa kita ambil kesimpulan yaitu dalam sebuah analogi robot HTML diibaratkan dengan kerangka robot, yang hanya terdiri dari kawat-kawat (konten halaman web) CSS diibaratkan dengan desain kerangka, seperti baju, topeng dan lain-lain (tata letak halaman web) JS diibaratkan dengan otak yang mampu bergerak dinamis (perilaku halaman web)","title":"Pentingnya Javascript"},{"location":"#silabus-js","text":"Klik link berikut : silabus js","title":"SILABUS JS"},{"location":"01_page-2/","text":"Tools yang digunakan Tools yang harus dipersiapkan Visual Studio Code digunakan untuk code editor nantinya, untuk menyampaikan algoritma dari bahasa js Google Chrome digunakan untuk menampilkan dari output scripting dari js","title":"Tools yang digunakan"},{"location":"01_page-2/#tools-yang-digunakan","text":"","title":"Tools yang digunakan"},{"location":"01_page-2/#tools-yang-harus-dipersiapkan","text":"Visual Studio Code digunakan untuk code editor nantinya, untuk menyampaikan algoritma dari bahasa js Google Chrome digunakan untuk menampilkan dari output scripting dari js","title":"Tools yang harus dipersiapkan"},{"location":"02_page-3/","text":"Extension yang digunakan Extension yang harus dipersiapkan Live server digunakan untuk menjalankan server lokal untuk proses debugging tampilan dan desain HTML. Live server ini akan mendeteksi perubahan di dalam file HTML, CSS, dan JS dan otomatis melakukan live reload halaman. JavaScript (ES6) code snippets digunakan untuk kerangka snippets penulisan JavaScript berbasiskan standar ES2015. Indent Rainbow digunakan untuk menambahkan warna pada jarak tab dan spasi (indent) . Cukup membantu untuk menampilkan indent pembuka dan indent penutup.","title":"Extension yang digunakan"},{"location":"02_page-3/#extension-yang-digunakan","text":"","title":"Extension yang digunakan"},{"location":"02_page-3/#extension-yang-harus-dipersiapkan","text":"Live server digunakan untuk menjalankan server lokal untuk proses debugging tampilan dan desain HTML. Live server ini akan mendeteksi perubahan di dalam file HTML, CSS, dan JS dan otomatis melakukan live reload halaman. JavaScript (ES6) code snippets digunakan untuk kerangka snippets penulisan JavaScript berbasiskan standar ES2015. Indent Rainbow digunakan untuk menambahkan warna pada jarak tab dan spasi (indent) . Cukup membantu untuk menampilkan indent pembuka dan indent penutup.","title":"Extension yang harus dipersiapkan"},{"location":"03_page-4/","text":"Referensi Melatih Skill No Course Link 1 Dicoding Dicoding 2 Hackerrank Hackerrank 3 Codewars Codewars 4 Leetcode Leetcode","title":"Referensi Melatih Skill"},{"location":"03_page-4/#referensi-melatih-skill","text":"No Course Link 1 Dicoding Dicoding 2 Hackerrank Hackerrank 3 Codewars Codewars 4 Leetcode Leetcode","title":"Referensi Melatih Skill"},{"location":"04_page-5/","text":"Steatement dan Expression Analogi sebelum memahami lebih dalam apa itu statement dan expression, mari kita lihat sebuah gambar di bawah ini Expression Expression merupakan kode yang menghasilkan nilai yang terdiri dari operator dan operand berupa angka, huruf dan simbol ( Tersimpan dalam Variable, di Konstanta, di Fungsi) x + 1; // ekspresi menjumlahkan x dengan 1 8 \\* 2; // ekspresi mengalikan 8 dengan 2 sqrt(100); // ekspresi untuk menghitung Statement Statement adalah instruksi untuk melakukan sebuah aksi tertentu. Aksi ini bisa termasuk membuat variabel, melakukan perulangan, pengecekan kondisi, dll. let nama; // deklarasi nama variable if(x >= 9 ){ console.log(\"Selamat datang di kelas javascript kafekoding 2020\") }; // deklarasi pengecekan kondisi","title":"Steatement dan Expression"},{"location":"04_page-5/#steatement-dan-expression","text":"","title":"Steatement dan Expression"},{"location":"04_page-5/#analogi","text":"sebelum memahami lebih dalam apa itu statement dan expression, mari kita lihat sebuah gambar di bawah ini","title":"Analogi"},{"location":"04_page-5/#expression","text":"Expression merupakan kode yang menghasilkan nilai yang terdiri dari operator dan operand berupa angka, huruf dan simbol ( Tersimpan dalam Variable, di Konstanta, di Fungsi) x + 1; // ekspresi menjumlahkan x dengan 1 8 \\* 2; // ekspresi mengalikan 8 dengan 2 sqrt(100); // ekspresi untuk menghitung","title":"Expression"},{"location":"04_page-5/#statement","text":"Statement adalah instruksi untuk melakukan sebuah aksi tertentu. Aksi ini bisa termasuk membuat variabel, melakukan perulangan, pengecekan kondisi, dll. let nama; // deklarasi nama variable if(x >= 9 ){ console.log(\"Selamat datang di kelas javascript kafekoding 2020\") }; // deklarasi pengecekan kondisi","title":"Statement"},{"location":"05_page-6/","text":"Komentar Pengertian Komentar Komentar adalah intruksi yang ditulis dalam suatu program tetapi tidak dijalankan oleh komputer Macam-macam Komentar 1. Sigle Line Comment Komentar yang digunakan hanya untuk satu baris dengan menulis // // apakah kamu senang belajar di kelas javascript ? // function (){} 2. Multiple Line Comment Komentar yang digunakan untuk lebih dari satu baris dengan menulis /**/ /* Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. */","title":"Komentar"},{"location":"05_page-6/#komentar","text":"","title":"Komentar"},{"location":"05_page-6/#pengertian-komentar","text":"Komentar adalah intruksi yang ditulis dalam suatu program tetapi tidak dijalankan oleh komputer","title":"Pengertian Komentar"},{"location":"05_page-6/#macam-macam-komentar","text":"","title":"Macam-macam Komentar"},{"location":"05_page-6/#1-sigle-line-comment","text":"Komentar yang digunakan hanya untuk satu baris dengan menulis // // apakah kamu senang belajar di kelas javascript ? // function (){}","title":"1. Sigle Line Comment"},{"location":"05_page-6/#2-multiple-line-comment","text":"Komentar yang digunakan untuk lebih dari satu baris dengan menulis /**/ /* Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. */","title":"2. Multiple Line Comment"},{"location":"06_page-7/","text":"Variabel Pengertian Variable Variabel umumnya digunakan untuk menyimpan informasi, data atau nilai yang akan dikelola dalam sebuah program Pada JavaScript setidaknya ada tiga cara untuk mendeklarasikan sebuah variabel, yaitu menggunakan keyword var, let, dan const. Pada versi ECMAScript 2015 (ES6) dikenalkan deklarasi variabel dengan let dan const untuk menggantikan var yang dinilai kontroversial dan rawan menimbulkan bug. Ketentuan dalam variable Berikut beberapa aturan dalam penamaan variabel yang perlu Anda ketahui: Harus dimulai dengan huruf atau underscore (_). Dapat terdiri dari huruf, angka, dan underscore (_) dengan berbagai kombinasi. Tidak boleh mengandung spasi (whitespace). Jika penamaan variabel lebih dari dua kata, tuliskan secara camelCase. Contoh firstName, lastName, catName, dll. Tidak boleh mengandung karakter spesial (! . , / \\ + * = dll.) Jenis-jenis Variable dalam Javascript Adapun berbedaan Var, Let dan const dapat dilihat di bawah ini Analogi perbedaan let dan const : Perbedaan VAR, LET dan CONST, dapat dilihat pada tabel dibawah ini : Var let Const Penugasan Bisa diubah Bisa diubah Tidak Bisa diubah Scope function-scoped block-scoped block-scoped Penjelasan detail yaitu sebagai berikut : \ud83d\ude0d 1. Penugasan Var Lihat code var kelas = \"javascript\" kelas = \"javascript di kafekoding\" console.log(kelas) // Output javascript di kafekoding Let Lihat code let nama = \"senja\" nama = \"sunrise\" nama = \"Bintang\" console.log(nama) // output : Bintang Const Lihat code const nama = \"Citra Febriawirti\" nama = \"Senja anugrah\" console.log(nama) // Output : Cannot assign to \"nama\" because it is a constant 2. Scope Var Lihat code for(var i=1; i<6; i++){ console.log(i) } console.log(i) // Output : 1 2 3 4 5 6 Let Lihat code for(let i=1; i<6; i++){ console.log(i) } console.log(i) // Output : 1 2 3 4 5 error : i is not defined","title":"Variabel"},{"location":"06_page-7/#variabel","text":"","title":"Variabel"},{"location":"06_page-7/#pengertian-variable","text":"Variabel umumnya digunakan untuk menyimpan informasi, data atau nilai yang akan dikelola dalam sebuah program Pada JavaScript setidaknya ada tiga cara untuk mendeklarasikan sebuah variabel, yaitu menggunakan keyword var, let, dan const. Pada versi ECMAScript 2015 (ES6) dikenalkan deklarasi variabel dengan let dan const untuk menggantikan var yang dinilai kontroversial dan rawan menimbulkan bug.","title":"Pengertian Variable"},{"location":"06_page-7/#ketentuan-dalam-variable","text":"Berikut beberapa aturan dalam penamaan variabel yang perlu Anda ketahui: Harus dimulai dengan huruf atau underscore (_). Dapat terdiri dari huruf, angka, dan underscore (_) dengan berbagai kombinasi. Tidak boleh mengandung spasi (whitespace). Jika penamaan variabel lebih dari dua kata, tuliskan secara camelCase. Contoh firstName, lastName, catName, dll. Tidak boleh mengandung karakter spesial (! . , / \\ + * = dll.)","title":"Ketentuan dalam variable"},{"location":"06_page-7/#jenis-jenis-variable-dalam-javascript","text":"Adapun berbedaan Var, Let dan const dapat dilihat di bawah ini Analogi perbedaan let dan const : Perbedaan VAR, LET dan CONST, dapat dilihat pada tabel dibawah ini : Var let Const Penugasan Bisa diubah Bisa diubah Tidak Bisa diubah Scope function-scoped block-scoped block-scoped Penjelasan detail yaitu sebagai berikut : \ud83d\ude0d","title":"Jenis-jenis Variable dalam Javascript"},{"location":"06_page-7/#1-penugasan","text":"Var Lihat code var kelas = \"javascript\" kelas = \"javascript di kafekoding\" console.log(kelas) // Output javascript di kafekoding Let Lihat code let nama = \"senja\" nama = \"sunrise\" nama = \"Bintang\" console.log(nama) // output : Bintang Const Lihat code const nama = \"Citra Febriawirti\" nama = \"Senja anugrah\" console.log(nama) // Output : Cannot assign to \"nama\" because it is a constant","title":"1. Penugasan"},{"location":"06_page-7/#2-scope","text":"Var Lihat code for(var i=1; i<6; i++){ console.log(i) } console.log(i) // Output : 1 2 3 4 5 6 Let Lihat code for(let i=1; i<6; i++){ console.log(i) } console.log(i) // Output : 1 2 3 4 5 error : i is not defined","title":"2. Scope"},{"location":"07_page-8/","text":"Tipe Data Dalam pemrograman, tipe data merupakan konsep penting. Untuk dapat beroperasi pada variabel, penting untuk mengetahui sesuatu tentang tipenya. Tanpa tipe data, komputer tidak dapat menyelesaikan masalah di bawah ini: var x = 11 + \"Alvin\"; Apakah masuk akal untuk menambahkan \"Alvin\" dengan sebelas? Apakah akan menghasilkan kesalahan atau akan memberikan hasil? JavaScript akan memperlakukan contoh di atas sebagai berikut: var x = \"11\" + \"Alvin\"; 1. Tipe Data Primitiv Kali ini kita akan membahas beberapa basic tipe data yaitu tipe data primitif. => Primitif (nilai primitif, tipe data primitif) adalah data yang bukan objek dan tidak memiliki method. Dalam JavaScript, ada 6 tipe data primitif: string, number, boolean, null, undefined, symbol (ECMAScript 2015). Adapun 6 tipe data priitif dapat dijelaskan sebagai berikut : 1. Number Value dari tipe data number adalah nilai numerik. Dalam program JavaScript, tipe data number ditulis sebagai berikut: 50; // bilangan int 3.14; // bilangan desimal Pengunaannya : let umur = 20 2. String Tipe data dasar berikutnya adalah string. String digunakan untuk merepresentasikan teks. String ditulis dengan melampirkan kontennya dalam tanda kutip. Kita dapat menggunakan single quotes, double quotes, atau backticks untuk menandai string, selama tanda kutip di awal dan akhir string cocok. 'Ini adalah kelas javascript' \"Ini adalah kelas javascript\" `Ini adalah kelas javascript` Tanda kutip yang didahului oleh backslash tidak akan mengakhiri string tetapi menjadi bagian darinya. Ketika karakter \"n\" muncul setelah backslash (\\n), itu ditafsirkan sebagai baris baru. Demikian pula, \"t\" setelah backslash (\\t) berarti karakter tab. \"Ini baris pertama\\nDan ini baris kedua\"; //Output: Ini baris pertama Dan ini baris kedua Bagaimana dengan penulisan \"Tambahkan dengan \\n\" ? \"Tambahkan dengan \\\"\\\\n\\\"\" Bagimana dengan penulisan \"Hari ini adalah hari Jum'at\" ? \"Hari ini adalah hari Jum'at\" 3. Boolean Boolean seringkali digunakan untuk nilai yang hanya memiliki dua kemungkinan, seperti \"yes\" dan \"no\" atau \"on\" dan \"off\". Untuk tujuan ini, JavaScript memiliki tipe Boolean, yang hanya memiliki dua nilai, true dan false. console.log(3 > 2); // \u2192 true console.log(3 < 2); // \u2192 false Tipe Data Non Primitiv Object Array Function kok ga dijelaskan ? simak yok","title":"Tipe Data"},{"location":"07_page-8/#tipe-data","text":"Dalam pemrograman, tipe data merupakan konsep penting. Untuk dapat beroperasi pada variabel, penting untuk mengetahui sesuatu tentang tipenya. Tanpa tipe data, komputer tidak dapat menyelesaikan masalah di bawah ini: var x = 11 + \"Alvin\"; Apakah masuk akal untuk menambahkan \"Alvin\" dengan sebelas? Apakah akan menghasilkan kesalahan atau akan memberikan hasil? JavaScript akan memperlakukan contoh di atas sebagai berikut: var x = \"11\" + \"Alvin\";","title":"Tipe Data"},{"location":"07_page-8/#1-tipe-data-primitiv","text":"Kali ini kita akan membahas beberapa basic tipe data yaitu tipe data primitif. => Primitif (nilai primitif, tipe data primitif) adalah data yang bukan objek dan tidak memiliki method. Dalam JavaScript, ada 6 tipe data primitif: string, number, boolean, null, undefined, symbol (ECMAScript 2015). Adapun 6 tipe data priitif dapat dijelaskan sebagai berikut :","title":"1. Tipe Data Primitiv"},{"location":"07_page-8/#1-number","text":"Value dari tipe data number adalah nilai numerik. Dalam program JavaScript, tipe data number ditulis sebagai berikut: 50; // bilangan int 3.14; // bilangan desimal Pengunaannya : let umur = 20","title":"1. Number"},{"location":"07_page-8/#2-string","text":"Tipe data dasar berikutnya adalah string. String digunakan untuk merepresentasikan teks. String ditulis dengan melampirkan kontennya dalam tanda kutip. Kita dapat menggunakan single quotes, double quotes, atau backticks untuk menandai string, selama tanda kutip di awal dan akhir string cocok. 'Ini adalah kelas javascript' \"Ini adalah kelas javascript\" `Ini adalah kelas javascript` Tanda kutip yang didahului oleh backslash tidak akan mengakhiri string tetapi menjadi bagian darinya. Ketika karakter \"n\" muncul setelah backslash (\\n), itu ditafsirkan sebagai baris baru. Demikian pula, \"t\" setelah backslash (\\t) berarti karakter tab. \"Ini baris pertama\\nDan ini baris kedua\"; //Output: Ini baris pertama Dan ini baris kedua Bagaimana dengan penulisan \"Tambahkan dengan \\n\" ? \"Tambahkan dengan \\\"\\\\n\\\"\" Bagimana dengan penulisan \"Hari ini adalah hari Jum'at\" ? \"Hari ini adalah hari Jum'at\"","title":"2. String"},{"location":"07_page-8/#3-boolean","text":"Boolean seringkali digunakan untuk nilai yang hanya memiliki dua kemungkinan, seperti \"yes\" dan \"no\" atau \"on\" dan \"off\". Untuk tujuan ini, JavaScript memiliki tipe Boolean, yang hanya memiliki dua nilai, true dan false. console.log(3 > 2); // \u2192 true console.log(3 < 2); // \u2192 false","title":"3. Boolean"},{"location":"07_page-8/#tipe-data-non-primitiv","text":"Object Array Function kok ga dijelaskan ? simak yok","title":"Tipe Data Non Primitiv"},{"location":"08_page-9/","text":"Operator Operator adalah simbol yang digunakan untuk melakukan operasi pada suatu nilai dan variabel. Operator dalam pemrograman terbagi dalam 6 jenis: Operator aritmatika; Operator Penugasan (Assignment); Opeartor relasi atau perbandingan; Operator Logika; Operator Bitwise; Operator Ternary; 1. Operator aritmatika Operator aritmatika merupakan operator untuk melakukan operasi aritmatika seperti penjumlahan, pengurangan, pembagian, perkalian, dsb. adapun soal yang dapat kita terapkan sebagai berikut : let a = 3 let b = 5 let c = 15 Nama Operator Simbol Contoh Penjumlahan + console.log(`${a} + ${b}`) Pengurangan - console.log(`${c} - ${b}`) Perkalian * console.log(`${a} * ${b}`) Pemangkatan ** console.log(`${a} ** ${b}`) Pembagian / console.log(`${c} + ${b}`) Sisa Bagi % console.log(`${c} % ${3}`) Adapun soal yang sesuai denga aritmatika dapat dilihat sebagai berikut : !! Latihan Perintah : Buatlah sebuah logika perhitungan dengan menggunakan operator aritmatika dengan hasil penjumlahan sama dengan 15 dan hasil pengurangan dengan sama dengan 1 yang terlebih dahulu dibuatkan dalam varible let dulu, selamat mengerjakan !! \ud83d\ude0e Buat jawaban di replit kirimkan linknya ke kak citra 2. Operator Penugasan Operator penugasan adalah operator yang digunakan untuk memberikan tugas kepada variabel. Biasanya digunakan untuk mengisi variabel. Nama Operator Simbol Contoh Pengisian Nilai = let nilai = 100 Pengisian dan Penambahan += console.log(nilai += 5) Pengisian dan Pengurangan -= console.log(nilai -= 5) Pengisian dan Perkalian *= console.log(nilai *= 5) Pengisian dan Pemangkatan **= console.log(nilai **=5) Pengisian dan Pembagian /= console.log(nilai /= 5) Pengisian dan Sisa bagi %= console.log(nilai %= 5) Adapun soal yang sesuai dengan penugasan dapat dilihat sebagai berikut : !! Latihan Perintah : let nama = \"Senja\" let nilai = 80 maka logika dengan operator penugasan dengan menggunakan (pengisian dan penjumlahan), semangat ya mengerjakannya !! \ud83e\udd11 3. Operator Perbandingan Operator relasi atau perbandingan adalah operator yang digunakan untuk membandingkan dua nilai. Operator perbandingan akan menghasilkan sebuah nilai boolean true dan false. Nama Operator Simbol Lebih Kecil < Lebih besar > Sama Dengan == atau === Tidak Sama dengan != Lebih Besar Sama dengan >= Lebih Kecil Sama dengan <= contoh soal yang menerapkan operator perbandingan yaitu sebagai berikut : 1. Lebih kecil dan lebih kecil sama dengan var a = 3; var b = 4; console.log(a < b); // true console.log(a <= b); // true var a = 5; var b = 5; console.log(a < b); // false console.log(a <= b); // true 2. Lebih besar dan lebih besar sama dengan var a = 3; var b = 4; console.log(a > b); // false console.log(a >= b); // false var a = 5; var b = 5; console.log(a > b); // false console.log(a >= b); // true 3. Tidak sama dengan var a = true; var benar = true; console.log(a !== benar); // false var a = 12; var b = 4; console.log(a !== b); // true var a = 7; var b = \"7\"; console.log(a !== b); // true ! var a = \"7\"; var b = \"7\"; console.log(a !== b); // false 4. Sama dengan var a = true; var benar = true; console.log(a == benar); // true var a = 12; var b = 4; console.log(a == b); // false var a = 7; var b = \"7\"; console.log(a == b); // true var a = true; var benar = true; console.log(a === benar); // true var a = 12; var b = 4; console.log(a === b); // false var a = 7; var b = \"7\"; console.log(a === b); // false ! var a = \"7\"; var b = \"7\"; console.log(a === b); // true 4. Operator Logika Operator logika digunakan untuk melakukan operasi terhadap dua nilai boolean. Nama Operator Simbol AND && OR Negasi ~ adapun contoh soal yang menerapkan operator logika, yaitu sebagai berikut : var a = true; var b = false; var hasil1 = a && b; console.log(hasil1); //false var hasil2 = a && a; console.log(hasil2); //true var hasil3 = a || b; console.log(hasil3); //true var hasil4 = !a; console.log(hasil4); //false","title":"Operator"},{"location":"08_page-9/#operator","text":"Operator adalah simbol yang digunakan untuk melakukan operasi pada suatu nilai dan variabel. Operator dalam pemrograman terbagi dalam 6 jenis: Operator aritmatika; Operator Penugasan (Assignment); Opeartor relasi atau perbandingan; Operator Logika; Operator Bitwise; Operator Ternary;","title":"Operator"},{"location":"08_page-9/#1-operator-aritmatika","text":"Operator aritmatika merupakan operator untuk melakukan operasi aritmatika seperti penjumlahan, pengurangan, pembagian, perkalian, dsb. adapun soal yang dapat kita terapkan sebagai berikut : let a = 3 let b = 5 let c = 15 Nama Operator Simbol Contoh Penjumlahan + console.log(`${a} + ${b}`) Pengurangan - console.log(`${c} - ${b}`) Perkalian * console.log(`${a} * ${b}`) Pemangkatan ** console.log(`${a} ** ${b}`) Pembagian / console.log(`${c} + ${b}`) Sisa Bagi % console.log(`${c} % ${3}`) Adapun soal yang sesuai denga aritmatika dapat dilihat sebagai berikut : !! Latihan Perintah : Buatlah sebuah logika perhitungan dengan menggunakan operator aritmatika dengan hasil penjumlahan sama dengan 15 dan hasil pengurangan dengan sama dengan 1 yang terlebih dahulu dibuatkan dalam varible let dulu, selamat mengerjakan !! \ud83d\ude0e Buat jawaban di replit kirimkan linknya ke kak citra","title":"1. Operator aritmatika"},{"location":"08_page-9/#2-operator-penugasan","text":"Operator penugasan adalah operator yang digunakan untuk memberikan tugas kepada variabel. Biasanya digunakan untuk mengisi variabel. Nama Operator Simbol Contoh Pengisian Nilai = let nilai = 100 Pengisian dan Penambahan += console.log(nilai += 5) Pengisian dan Pengurangan -= console.log(nilai -= 5) Pengisian dan Perkalian *= console.log(nilai *= 5) Pengisian dan Pemangkatan **= console.log(nilai **=5) Pengisian dan Pembagian /= console.log(nilai /= 5) Pengisian dan Sisa bagi %= console.log(nilai %= 5) Adapun soal yang sesuai dengan penugasan dapat dilihat sebagai berikut : !! Latihan Perintah : let nama = \"Senja\" let nilai = 80 maka logika dengan operator penugasan dengan menggunakan (pengisian dan penjumlahan), semangat ya mengerjakannya !! \ud83e\udd11","title":"2. Operator Penugasan"},{"location":"08_page-9/#3-operator-perbandingan","text":"Operator relasi atau perbandingan adalah operator yang digunakan untuk membandingkan dua nilai. Operator perbandingan akan menghasilkan sebuah nilai boolean true dan false. Nama Operator Simbol Lebih Kecil < Lebih besar > Sama Dengan == atau === Tidak Sama dengan != Lebih Besar Sama dengan >= Lebih Kecil Sama dengan <= contoh soal yang menerapkan operator perbandingan yaitu sebagai berikut :","title":"3. Operator Perbandingan"},{"location":"08_page-9/#1-lebih-kecil-dan-lebih-kecil-sama-dengan","text":"var a = 3; var b = 4; console.log(a < b); // true console.log(a <= b); // true var a = 5; var b = 5; console.log(a < b); // false console.log(a <= b); // true","title":"1. Lebih kecil dan lebih kecil sama dengan"},{"location":"08_page-9/#2-lebih-besar-dan-lebih-besar-sama-dengan","text":"var a = 3; var b = 4; console.log(a > b); // false console.log(a >= b); // false var a = 5; var b = 5; console.log(a > b); // false console.log(a >= b); // true","title":"2. Lebih besar dan lebih besar sama dengan"},{"location":"08_page-9/#3-tidak-sama-dengan","text":"var a = true; var benar = true; console.log(a !== benar); // false var a = 12; var b = 4; console.log(a !== b); // true var a = 7; var b = \"7\"; console.log(a !== b); // true ! var a = \"7\"; var b = \"7\"; console.log(a !== b); // false","title":"3. Tidak sama dengan"},{"location":"08_page-9/#4-sama-dengan","text":"var a = true; var benar = true; console.log(a == benar); // true var a = 12; var b = 4; console.log(a == b); // false var a = 7; var b = \"7\"; console.log(a == b); // true var a = true; var benar = true; console.log(a === benar); // true var a = 12; var b = 4; console.log(a === b); // false var a = 7; var b = \"7\"; console.log(a === b); // false ! var a = \"7\"; var b = \"7\"; console.log(a === b); // true","title":"4. Sama dengan"},{"location":"08_page-9/#4-operator-logika","text":"Operator logika digunakan untuk melakukan operasi terhadap dua nilai boolean. Nama Operator Simbol AND && OR Negasi ~ adapun contoh soal yang menerapkan operator logika, yaitu sebagai berikut : var a = true; var b = false; var hasil1 = a && b; console.log(hasil1); //false var hasil2 = a && a; console.log(hasil2); //true var hasil3 = a || b; console.log(hasil3); //true var hasil4 = !a; console.log(hasil4); //false","title":"4. Operator Logika"},{"location":"09_page-10/","text":"Condition ] Condition adalah suatu kondisi yang sesuai dengan Dalam JavaScript, ada tiga bentuk if statement. if if..else if..else if 1. if Statement if(...) mengevaluasi kondisi dalam tanda kurung ( ). Jika kondisi dievaluasi sebagai true, kode di dalam body if akan dieksekusi. Namun jika kondisi dievaluasi sebagai false, kode di dalam body if akan dilewati. Terdapat 2 cara dalam penulisan conditional if. let belanja = 10000 if(belanja === 10000){ console.log(\"Selamat Anda mendapatkan hadiah\") } let belanja = 10000 if(belanja === 10000) console.log(\"Selamat Anda mendapatkan hadiah\") 2. If...Else Pernyataan if mungkin berisi blok \"else\" yang sifatnya opsional. else akan dieksekusi ketika kondisi di if(...) falsy. Jika kondisi if(...) nilainya true : Kode di dalam body if akan dieksekusi. Kode di dalam body else akan dilewati dan tidak dieksekusi. Jika kondisi if(...) nilainya false : Kode di dalam body else akan dieksekusi. Kode di dalam body if akan dilewati dan tidak dieksekusi. let password = \"UnivesitasMetamedia\" if(password===\"STMIKIndonesiaPadang\"){ console.log(\"Selamat Datang\") }else{ console.log(\"Passwod salah, coba lagi\") } let password = \"UnivesitasMetamedia\" let hasil = (password === \"STMIKIndonesiaPadang\" ? \"Selamat Datang\" : \"Password salah, coba lagi\") console.log(hasil) 3. if..else if Pernyataan if..else digunakan untuk mengeksekusi blok kode di antara dua alternatif. Namun, jika perlu membuat pilihan di antara lebih dari dua alternatif, if..else if..else dapat digunakan. Jika condition1 nilainya true, blok kode 1 akan dieksekusi. Jika condition1 nilainya false, maka statement else if condition2 akan dieksekusi. Jika condition2 nilainya true, blok kode 2 akan dieksekusi. Jika condition2 nilainya false, blok kode 3 akan dieksekusi. let nilai = 90 if(nilai >= 90){ console.log(\"Nilai A\") }else if(nilai >= 80){ console.log(\"Nilai B\") }else if(nilai >= 70){ console.log(\"Nilai C\") }else{ console.log(\"Nilai D\") } LATIHAN Buatlah sebuah program ini dengan menggunakan conditional dengan spesifikasi >- Angka kelipatan 3 maka cetak \"fizz\" >- Angka kelipatan 5 maka cetak \"buzz\" >- Angka kelipatan 3 dan kelipatan 5 maka cetak \"fizzbuzz\" buatlah di replit \ud83d\ude0d","title":"Condition"},{"location":"09_page-10/#condition","text":"] Condition adalah suatu kondisi yang sesuai dengan","title":"Condition"},{"location":"09_page-10/#dalam-javascript-ada-tiga-bentuk-if-statement","text":"if if..else if..else if","title":"Dalam JavaScript, ada tiga bentuk if statement."},{"location":"09_page-10/#1-if","text":"Statement if(...) mengevaluasi kondisi dalam tanda kurung ( ). Jika kondisi dievaluasi sebagai true, kode di dalam body if akan dieksekusi. Namun jika kondisi dievaluasi sebagai false, kode di dalam body if akan dilewati. Terdapat 2 cara dalam penulisan conditional if. let belanja = 10000 if(belanja === 10000){ console.log(\"Selamat Anda mendapatkan hadiah\") } let belanja = 10000 if(belanja === 10000) console.log(\"Selamat Anda mendapatkan hadiah\")","title":"1. if"},{"location":"09_page-10/#2-ifelse","text":"Pernyataan if mungkin berisi blok \"else\" yang sifatnya opsional. else akan dieksekusi ketika kondisi di if(...) falsy.","title":"2. If...Else"},{"location":"09_page-10/#jika-kondisi-if-nilainya-true","text":"Kode di dalam body if akan dieksekusi. Kode di dalam body else akan dilewati dan tidak dieksekusi.","title":"Jika kondisi if(...) nilainya true:"},{"location":"09_page-10/#jika-kondisi-if-nilainya-false","text":"Kode di dalam body else akan dieksekusi. Kode di dalam body if akan dilewati dan tidak dieksekusi. let password = \"UnivesitasMetamedia\" if(password===\"STMIKIndonesiaPadang\"){ console.log(\"Selamat Datang\") }else{ console.log(\"Passwod salah, coba lagi\") } let password = \"UnivesitasMetamedia\" let hasil = (password === \"STMIKIndonesiaPadang\" ? \"Selamat Datang\" : \"Password salah, coba lagi\") console.log(hasil)","title":"Jika kondisi if(...) nilainya false:"},{"location":"09_page-10/#3-ifelse-if","text":"Pernyataan if..else digunakan untuk mengeksekusi blok kode di antara dua alternatif. Namun, jika perlu membuat pilihan di antara lebih dari dua alternatif, if..else if..else dapat digunakan. Jika condition1 nilainya true, blok kode 1 akan dieksekusi. Jika condition1 nilainya false, maka statement else if condition2 akan dieksekusi. Jika condition2 nilainya true, blok kode 2 akan dieksekusi. Jika condition2 nilainya false, blok kode 3 akan dieksekusi. let nilai = 90 if(nilai >= 90){ console.log(\"Nilai A\") }else if(nilai >= 80){ console.log(\"Nilai B\") }else if(nilai >= 70){ console.log(\"Nilai C\") }else{ console.log(\"Nilai D\") }","title":"3. if..else if"},{"location":"09_page-10/#latihan","text":"Buatlah sebuah program ini dengan menggunakan conditional dengan spesifikasi >- Angka kelipatan 3 maka cetak \"fizz\" >- Angka kelipatan 5 maka cetak \"buzz\" >- Angka kelipatan 3 dan kelipatan 5 maka cetak \"fizzbuzz\" buatlah di replit \ud83d\ude0d","title":"LATIHAN"},{"location":"10_page-11/","text":"Perulangan Apa itu Perulangan ? Looping atau yang lebih dikenal dengan perulangan adalah suatu metode dalam pemrograman untuk meng eksekusi suatu berintah yang sama terus-menerus hingga kondisi tertentu terpenuhi. Kenapa Perulangan dilakukan Ketika programmer membuat program looping maka akan menjadikan script yang harus ditulis sebanyak puluhan atau ratusan baris menjadi hanya beberapa baris saja. Menggunakan looping berarti membuat sesuatu yang dapat menghasilkan banyak output dengan minimal script. Secara umum, perulangan ini dibagi dua. Yaitu: counted loop dan uncounted loop. Perbedaanya: Counted Loop merupakan perulangan yang jelas dan sudah tentu banyak perulangannya (For, Foreach, Repeat). Uncounted Loop, merupakan perulangan yang tidak jelas berapa kali ia harus mengulang (While, Do/While). 1. For Perulangan for merupakan perulangan yang termasuk dalam couted loop, karena sudah jelas berapa kali ia akan mengulang. Berikut ini pseudo-code perulang for. for([inisialisasi]; [kondisi]; [eksekusi iterasi]) { // blok kode } Inisialisasi adalah saat pertama kali kita mendeklarasi sebuah nilai awal, dimana nilai awal akan berubah selama belum memenuhi syarat kondisi. Kondisi berfungsi untuk mengecek perubahan yang terjadi setiap kali terjadi eksekusi iterasi perulangan dengan menggunakan operator perbandingan. Eksekusi Iterasi proses akhir setiap kali terjadi eksekusi iterasi, biasanya digunakan untuk proses penambahan (increment) atau pengurangan (decrement). Dengan sintaks sebagai berikut : for(let i = 0; i < 10; i++){ console.log(\"<p>Perulangan ke-\" + i + \"</p>\") } Tahapan dalam pembacaan sintaks diatas, sebagaia berikut : Yang perlu diperhatikan adalah kondisi yang ada di dalam kurung setelah kata for. Kondisi ini akan menentukan: Hitungan akan dimulai dari 0 (i = 0); Hitungannya sampai berapa? Sampai i < 10; Lalu di setiap perulangan i akan bertambah +1 (i++). Variabel i pada perulangan for berfungsi untuk menyimpan nilai hitungan. Jadi setiap perulangan dilakukan nilai i akan selalu bertambah satu. Karena kita menentukannya di bagian i++.","title":"Perulangan"},{"location":"10_page-11/#perulangan","text":"","title":"Perulangan"},{"location":"10_page-11/#apa-itu-perulangan","text":"Looping atau yang lebih dikenal dengan perulangan adalah suatu metode dalam pemrograman untuk meng eksekusi suatu berintah yang sama terus-menerus hingga kondisi tertentu terpenuhi.","title":"Apa itu Perulangan ?"},{"location":"10_page-11/#kenapa-perulangan-dilakukan","text":"Ketika programmer membuat program looping maka akan menjadikan script yang harus ditulis sebanyak puluhan atau ratusan baris menjadi hanya beberapa baris saja. Menggunakan looping berarti membuat sesuatu yang dapat menghasilkan banyak output dengan minimal script. Secara umum, perulangan ini dibagi dua. Yaitu: counted loop dan uncounted loop. Perbedaanya: Counted Loop merupakan perulangan yang jelas dan sudah tentu banyak perulangannya (For, Foreach, Repeat). Uncounted Loop, merupakan perulangan yang tidak jelas berapa kali ia harus mengulang (While, Do/While).","title":"Kenapa Perulangan dilakukan"},{"location":"10_page-11/#1-for","text":"Perulangan for merupakan perulangan yang termasuk dalam couted loop, karena sudah jelas berapa kali ia akan mengulang. Berikut ini pseudo-code perulang for. for([inisialisasi]; [kondisi]; [eksekusi iterasi]) { // blok kode } Inisialisasi adalah saat pertama kali kita mendeklarasi sebuah nilai awal, dimana nilai awal akan berubah selama belum memenuhi syarat kondisi. Kondisi berfungsi untuk mengecek perubahan yang terjadi setiap kali terjadi eksekusi iterasi perulangan dengan menggunakan operator perbandingan. Eksekusi Iterasi proses akhir setiap kali terjadi eksekusi iterasi, biasanya digunakan untuk proses penambahan (increment) atau pengurangan (decrement). Dengan sintaks sebagai berikut : for(let i = 0; i < 10; i++){ console.log(\"<p>Perulangan ke-\" + i + \"</p>\") } Tahapan dalam pembacaan sintaks diatas, sebagaia berikut : Yang perlu diperhatikan adalah kondisi yang ada di dalam kurung setelah kata for. Kondisi ini akan menentukan: Hitungan akan dimulai dari 0 (i = 0); Hitungannya sampai berapa? Sampai i < 10; Lalu di setiap perulangan i akan bertambah +1 (i++). Variabel i pada perulangan for berfungsi untuk menyimpan nilai hitungan. Jadi setiap perulangan dilakukan nilai i akan selalu bertambah satu. Karena kita menentukannya di bagian i++.","title":"1. For"},{"location":"11_page-12/","text":"Object 1. Pengertian Object Perbedaan utama antara objek dan tipe data lain seperti string dan integer dalam JavaScript adalah bahwa objek dapat menyimpan berbagai tipe data sebagai nilainya. Di sisi lain, tipe data primitif seperti integer dan string hanya dapat menyimpan integer dan string, masing-masing, sebagai nilainya. Objek adalah sebuah variabel yang menyimpan nilai (properti) dan fungsi (method). <<<<<<< HEAD 2. Kenapa object MAHASISWA Var nama = \u2018budi\u2019 Var umur = 27 Var lulus = true Var ipSemester : 3.99 Dari data mahasiswa dengan ditulis satu-satu masing data, sehingga kurang efektif untuk digunakan apabila skala banyak data yang akan digunakan Var mahasiswa ={ nama : \u2018budi sudarsono\u2019, umur : 27, lulus : true, ipSemester : 3.99, } Console.log(mahasiswa) Output : 3. Akses Nilai Properti Akses nilai properti dapat dilakukan dengan dua cara, yaitu: 1.Penggunaan kurung siku ([ ]) setelah nama objek. Kurung siku kemudian diisikan dengan nama properti, yang harus berupa string. var mahasiswa = { nama: 'budi sudarsono', umur: 27, lulus: true, ipSemester: 3.99, } console.log(mahasiswa['umur']) Output : 2.Penggunaan tanda titik (.) setelah nama objek diikuti dengan nama properti. Notasi ini merupakan notasi yang umum digunakan pada bahasa pemrograman lainnya var mahasiswa ={ nama : 'budi sudarsono', umur : 27, lulus : true, ipSemester : 3.99, } Console.log(mahasiswa.nama) Output : 4. Object di dalam object var mahasiswa = { nama: 'budi sudarsono', umur: 27, lulus: true, ipSemester: 3.99, alamat: { jalan: 'jln. Belanti no.123', kota: 'padang', provinsi: 'sumatera barat' } } console.log(mahasiswa) Output : 5. Membuat object pada javascript Obejct literal Function deklarasi Oject Literal var ayah = { nama: 'budi', umur:47, agama: 'islam', golonganDarah:'O', alamat:'padang' } var ibu ={ nama: 'ayu', umur: 45, agama:'islam', golonganDarah:'B', alamat:'padang' } console.log(ayah) console.log(ibu) Ouput : 2.Function Deklarasi function objekKeluarga(nama,umur,agama,alamat){ var keluarga={} keluarga.nama=nama keluarga.umur=umur keluarga.agama=agama keluarga.alamat=alamat return keluarga } var ayah= objekKeluarga('budi',47,'islam','padang') var ibu=objekKeluarga('ayu',45,'islam','padang') console.log(ayah) console.log(ibu) Output :","title":"Object"},{"location":"11_page-12/#object","text":"","title":"Object"},{"location":"11_page-12/#1-pengertian-object","text":"Perbedaan utama antara objek dan tipe data lain seperti string dan integer dalam JavaScript adalah bahwa objek dapat menyimpan berbagai tipe data sebagai nilainya. Di sisi lain, tipe data primitif seperti integer dan string hanya dapat menyimpan integer dan string, masing-masing, sebagai nilainya. Objek adalah sebuah variabel yang menyimpan nilai (properti) dan fungsi (method). <<<<<<< HEAD","title":"1. Pengertian Object"},{"location":"11_page-12/#2-kenapa-object","text":"MAHASISWA Var nama = \u2018budi\u2019 Var umur = 27 Var lulus = true Var ipSemester : 3.99 Dari data mahasiswa dengan ditulis satu-satu masing data, sehingga kurang efektif untuk digunakan apabila skala banyak data yang akan digunakan Var mahasiswa ={ nama : \u2018budi sudarsono\u2019, umur : 27, lulus : true, ipSemester : 3.99, } Console.log(mahasiswa) Output :","title":"2. Kenapa object"},{"location":"11_page-12/#3-akses-nilai-properti","text":"Akses nilai properti dapat dilakukan dengan dua cara, yaitu: 1.Penggunaan kurung siku ([ ]) setelah nama objek. Kurung siku kemudian diisikan dengan nama properti, yang harus berupa string. var mahasiswa = { nama: 'budi sudarsono', umur: 27, lulus: true, ipSemester: 3.99, } console.log(mahasiswa['umur']) Output : 2.Penggunaan tanda titik (.) setelah nama objek diikuti dengan nama properti. Notasi ini merupakan notasi yang umum digunakan pada bahasa pemrograman lainnya var mahasiswa ={ nama : 'budi sudarsono', umur : 27, lulus : true, ipSemester : 3.99, } Console.log(mahasiswa.nama) Output :","title":"3. Akses Nilai Properti"},{"location":"11_page-12/#4-object-di-dalam-object","text":"var mahasiswa = { nama: 'budi sudarsono', umur: 27, lulus: true, ipSemester: 3.99, alamat: { jalan: 'jln. Belanti no.123', kota: 'padang', provinsi: 'sumatera barat' } } console.log(mahasiswa) Output :","title":"4. Object di dalam object"},{"location":"11_page-12/#5-membuat-object-pada-javascript","text":"Obejct literal Function deklarasi Oject Literal var ayah = { nama: 'budi', umur:47, agama: 'islam', golonganDarah:'O', alamat:'padang' } var ibu ={ nama: 'ayu', umur: 45, agama:'islam', golonganDarah:'B', alamat:'padang' } console.log(ayah) console.log(ibu) Ouput : 2.Function Deklarasi function objekKeluarga(nama,umur,agama,alamat){ var keluarga={} keluarga.nama=nama keluarga.umur=umur keluarga.agama=agama keluarga.alamat=alamat return keluarga } var ayah= objekKeluarga('budi',47,'islam','padang') var ibu=objekKeluarga('ayu',45,'islam','padang') console.log(ayah) console.log(ibu) Output :","title":"5. Membuat object pada javascript"},{"location":"11_page-12/#_1","text":"","title":""},{"location":"12_page-13/","text":"Array 1. Pengertian Array Tipe data yang di gunakan untuk mendeskripsikan kumpulan elemen (nilai atau variabel) yang tiap elemen nya memiliki index. \"array adalah variabel yang kerennn\u201d Kenapa..? Karena array tersebut dapat menampung banyak nilai 2. Kenapa Harus menggunakan Array Bisa saja kita buat seperti ini: var hari1 = \"senin\"; var hari2 = \"selasa\"; var hari3 = \"rabu\"; Apakah boleh seperti ini? Boleh-boleh saja. Tapi kurang efektif. Dengan menggunakan lebih mempersingkat sintak yang kita buat, dapat dilihat di bawah ini var hari = [ \u2018senin\u2019,\u2019selasa\u2019,\u2019rabu\u2019,\u2019kamis\u2019 ] var siswa = [ \u2018budi\u2019,\u2019ayu\u2019,\u2019joko\u2019 ] Kelebihan dengan menggunakan array sebagai berikut : 1.Mempermudah pengelolaan nilai / data [ penelusuran dan pencarian ] 2.Manajamen memori 3. Sifat-sifat dari array Variabel jamak yang mempunyai banyak elemen dan di acu dengan nama yang sama Kumpulan pasangan key dan nilai Key adalah index pada array dengan tipe integer yang di mulai dari array pada javascript bertipe objek Array pada javascript memiliki fungsi / method length untuk menghitung jumlah elemen di dalam nya Elemen pada array itu boleh memiliki tipe data yang berbeda 4. Sintak array CARA 1 var elemen = [ \u2018hardisk 2TB\u2019,\u2019flasdisk 32GB\u2019,\u2019modem\u2019 ] CARA 2 var elemen =[ ] elemen = [ \u2018hardisk 2TB\u2019,\u2019flasdisk 32GB\u2019,\u2019modem\u2019 ] Contoh sintak array menggunakan indeks yaitu sebagai berikut : var elemen = [ \u2018hardisk 2TB\u2019,\u2019flasdisk 32GB\u2019,\u2019modem\u2019 ] console.log( elemen [ 2 ] ) Ouput : 5. Array dalam array Latihan !!! Buatlah sebuah array dan array bersarang dengan variabel yang bernama keluarga nah di dalam keluarga tersebut terdapat ayah,ibu,dan anak ibu ada 5, nama Ayah ( budi sudarsono) Ibu ( ayu sinta putri) Anak 1-5 ( joko,dina,april,alif,doni) output: april adalah anak dari ayu sinta putri","title":"Array"},{"location":"12_page-13/#array","text":"","title":"Array"},{"location":"12_page-13/#1-pengertian-array","text":"Tipe data yang di gunakan untuk mendeskripsikan kumpulan elemen (nilai atau variabel) yang tiap elemen nya memiliki index. \"array adalah variabel yang kerennn\u201d Kenapa..? Karena array tersebut dapat menampung banyak nilai","title":"1. Pengertian Array"},{"location":"12_page-13/#2-kenapa-harus-menggunakan-array","text":"Bisa saja kita buat seperti ini: var hari1 = \"senin\"; var hari2 = \"selasa\"; var hari3 = \"rabu\"; Apakah boleh seperti ini? Boleh-boleh saja. Tapi kurang efektif. Dengan menggunakan lebih mempersingkat sintak yang kita buat, dapat dilihat di bawah ini var hari = [ \u2018senin\u2019,\u2019selasa\u2019,\u2019rabu\u2019,\u2019kamis\u2019 ] var siswa = [ \u2018budi\u2019,\u2019ayu\u2019,\u2019joko\u2019 ] Kelebihan dengan menggunakan array sebagai berikut : 1.Mempermudah pengelolaan nilai / data [ penelusuran dan pencarian ] 2.Manajamen memori","title":"2. Kenapa Harus menggunakan Array"},{"location":"12_page-13/#3-sifat-sifat-dari-array","text":"Variabel jamak yang mempunyai banyak elemen dan di acu dengan nama yang sama Kumpulan pasangan key dan nilai Key adalah index pada array dengan tipe integer yang di mulai dari array pada javascript bertipe objek Array pada javascript memiliki fungsi / method length untuk menghitung jumlah elemen di dalam nya Elemen pada array itu boleh memiliki tipe data yang berbeda","title":"3. Sifat-sifat dari array"},{"location":"12_page-13/#4-sintak-array","text":"CARA 1 var elemen = [ \u2018hardisk 2TB\u2019,\u2019flasdisk 32GB\u2019,\u2019modem\u2019 ] CARA 2 var elemen =[ ] elemen = [ \u2018hardisk 2TB\u2019,\u2019flasdisk 32GB\u2019,\u2019modem\u2019 ] Contoh sintak array menggunakan indeks yaitu sebagai berikut : var elemen = [ \u2018hardisk 2TB\u2019,\u2019flasdisk 32GB\u2019,\u2019modem\u2019 ] console.log( elemen [ 2 ] ) Ouput :","title":"4. Sintak array"},{"location":"12_page-13/#5-array-dalam-array","text":"Latihan !!! Buatlah sebuah array dan array bersarang dengan variabel yang bernama keluarga nah di dalam keluarga tersebut terdapat ayah,ibu,dan anak ibu ada 5, nama Ayah ( budi sudarsono) Ibu ( ayu sinta putri) Anak 1-5 ( joko,dina,april,alif,doni) output: april adalah anak dari ayu sinta putri","title":"5. Array dalam array"},{"location":"13_page-14/","text":"Function","title":"Function"},{"location":"13_page-14/#function","text":"","title":"Function"},{"location":"14_page-15/","text":"Review Materi Kerjakan soal dengan baik dan seksama Soal 1 2 orang mahasiswa yang bernama budi dan joko tidak mengetahui dimana kelas javascript dan php,Buatkanlah program sederhana dengan menggunakan if else yang mana program tersebut bisa mengetahui dimana kelas javascript dan php berada \ud83d\udd39Kelas javascript berada di ruangan labor 103 mulai kelas jam 10:00 AM \ud83d\udd39Kelas php berada di ruangan labor 101 mulai kelas pada jam 01:00 PM. Buatkanlah ruangan dan waktu mulai kelas tersebut menggunakan if,else if, dan else jika ada seorang yang belum terdaftar di kelas maka output nya \"mohon maaf anda belum mengambil kelas kafe koding Output : (pilih salah satu) Budi kelas javascript yang kamu ambil berada di ruangan labor 103 kelas di mulai pada jam 10:00 am Joko kelas php yang kamu ambil berada di ruangan labor 101 kelas di mulai pada jam 01:00 pm pagi mohon maaf anda tidak mengambil kelas kafe koding Jawaban let mhs1 = 'budi' let mhs2 = 'joko' let waktuJS = ('10:00 am') let waktuPHP = ('01:00 pm') let ruanganJavaScript = 'labor 103' let ruanganPHP = 'labor 101' if (mhs1 == 'budi') { console.log(mhs1 + ' kelas yang kamu ambil berada di ' + ruanganJavaScript + ' kelas di mulai pukul ' + waktuJS) } else if (mhs2 == 'joko') { console.log(mhs2 + ' kelas yang kamu ambil berada di ' + ruanganPHP + ' kelas di mulai pukul ' + waktuPHP) } else { console.log('mohon maaf anda belum terdaftar di kelas kafe koding') } Soal 2 Sebuah kampus memiliki 10 buah kelas kelas, \ud83d\udd39Kelas 1-6 sedang di pakai, \ud83d\udd39Kelas yang ke 7 tidak di pakai, \ud83d\udd39Kelas ke 8 sedang di renovasi, \ud83d\udd39Kelas 9-10 tidak di pakai Buatkanlah program sederhana dengan menggunakan perulangan for dan percabangan if else jika kelas yang ke 1-6 di pakai maka output nya kelas 1-6 sedang di pakai oleh mahasiswa jika kelas 7,9,dan 10 tidak di pakai maka output nya kelas 7,9,10 sedang tidak di pakai jika kelas 8 sedang di renovasi maka output nya kelas yang ke 8 sedang di renovasi Jawaban let jumlahKelas= 10 let kelasDipakai=6 for(let nomorKelas=1;nomorKelas<=jumlahKelas;nomorKelas++){ if(nomorKelas<=kelasDipakai){ console.log('kelas no '+nomorKelas+' sedang di pakai oleh mahasiswa') }else if (nomorKelas===8){ console.log('kelas no '+nomorKelas+' sedang di renovasi') }else{ console.log('kelas no '+nomorKelas+' sedang tidak di pakai') } } Soal 3 Sebuah warung menjual kopi,gula dan minyak harga: \ud83d\udd39kopi=5000, \ud83d\udd39gula=4000, \ud83d\udd39minyak=6000 Buatlah sebuah program sederhana dengan menggunakan function yang mana jika user membeli kopi dengan jumlah 2 bungkus maka output nya kamu membeli kopi 2 bungkus dengan harga 10.000 jika user membeli kopi 2 bungkus dan minyak 1 bungkus maka output nya kamu membeli kopi 2 bungkus dan minyak 1 bungkus dengan total bayar 16.000 clue: nama=jml*harga total=nama+nama+nama Jawaban function warung(kopi,gula,minyak){ let jumlahKopi let jumlahGula let jumlahMinyak let harga jumlahKopi=kopi*5000 jumlahGula=gula*4000 jumlahMinyak=minyak*6000 harga=jumlahKopi+jumlahGula+jumlahMinyak return harga } console.log('anda membeli kopi 2 bungkus dan minyak 1 bungkus dengan total bayar Rp. '+warung(2,0,1))","title":"Review Materi"},{"location":"14_page-15/#review-materi","text":"Kerjakan soal dengan baik dan seksama","title":"Review Materi"},{"location":"14_page-15/#soal-1","text":"2 orang mahasiswa yang bernama budi dan joko tidak mengetahui dimana kelas javascript dan php,Buatkanlah program sederhana dengan menggunakan if else yang mana program tersebut bisa mengetahui dimana kelas javascript dan php berada \ud83d\udd39Kelas javascript berada di ruangan labor 103 mulai kelas jam 10:00 AM \ud83d\udd39Kelas php berada di ruangan labor 101 mulai kelas pada jam 01:00 PM. Buatkanlah ruangan dan waktu mulai kelas tersebut menggunakan if,else if, dan else jika ada seorang yang belum terdaftar di kelas maka output nya \"mohon maaf anda belum mengambil kelas kafe koding Output : (pilih salah satu) Budi kelas javascript yang kamu ambil berada di ruangan labor 103 kelas di mulai pada jam 10:00 am Joko kelas php yang kamu ambil berada di ruangan labor 101 kelas di mulai pada jam 01:00 pm pagi mohon maaf anda tidak mengambil kelas kafe koding Jawaban let mhs1 = 'budi' let mhs2 = 'joko' let waktuJS = ('10:00 am') let waktuPHP = ('01:00 pm') let ruanganJavaScript = 'labor 103' let ruanganPHP = 'labor 101' if (mhs1 == 'budi') { console.log(mhs1 + ' kelas yang kamu ambil berada di ' + ruanganJavaScript + ' kelas di mulai pukul ' + waktuJS) } else if (mhs2 == 'joko') { console.log(mhs2 + ' kelas yang kamu ambil berada di ' + ruanganPHP + ' kelas di mulai pukul ' + waktuPHP) } else { console.log('mohon maaf anda belum terdaftar di kelas kafe koding') }","title":"Soal 1"},{"location":"14_page-15/#soal-2","text":"Sebuah kampus memiliki 10 buah kelas kelas, \ud83d\udd39Kelas 1-6 sedang di pakai, \ud83d\udd39Kelas yang ke 7 tidak di pakai, \ud83d\udd39Kelas ke 8 sedang di renovasi, \ud83d\udd39Kelas 9-10 tidak di pakai Buatkanlah program sederhana dengan menggunakan perulangan for dan percabangan if else jika kelas yang ke 1-6 di pakai maka output nya kelas 1-6 sedang di pakai oleh mahasiswa jika kelas 7,9,dan 10 tidak di pakai maka output nya kelas 7,9,10 sedang tidak di pakai jika kelas 8 sedang di renovasi maka output nya kelas yang ke 8 sedang di renovasi Jawaban let jumlahKelas= 10 let kelasDipakai=6 for(let nomorKelas=1;nomorKelas<=jumlahKelas;nomorKelas++){ if(nomorKelas<=kelasDipakai){ console.log('kelas no '+nomorKelas+' sedang di pakai oleh mahasiswa') }else if (nomorKelas===8){ console.log('kelas no '+nomorKelas+' sedang di renovasi') }else{ console.log('kelas no '+nomorKelas+' sedang tidak di pakai') } }","title":"Soal 2"},{"location":"14_page-15/#soal-3","text":"Sebuah warung menjual kopi,gula dan minyak harga: \ud83d\udd39kopi=5000, \ud83d\udd39gula=4000, \ud83d\udd39minyak=6000 Buatlah sebuah program sederhana dengan menggunakan function yang mana jika user membeli kopi dengan jumlah 2 bungkus maka output nya kamu membeli kopi 2 bungkus dengan harga 10.000 jika user membeli kopi 2 bungkus dan minyak 1 bungkus maka output nya kamu membeli kopi 2 bungkus dan minyak 1 bungkus dengan total bayar 16.000 clue: nama=jml*harga total=nama+nama+nama Jawaban function warung(kopi,gula,minyak){ let jumlahKopi let jumlahGula let jumlahMinyak let harga jumlahKopi=kopi*5000 jumlahGula=gula*4000 jumlahMinyak=minyak*6000 harga=jumlahKopi+jumlahGula+jumlahMinyak return harga } console.log('anda membeli kopi 2 bungkus dan minyak 1 bungkus dengan total bayar Rp. '+warung(2,0,1))","title":"Soal 3"},{"location":"15_page-16/","text":"Soal Ujian Soal 1 Buatlah sebuah object dan object di dalam object perusahaan dengan struktur perusahaan yaitu: Direksi => nip, nama, noHP, dan alamat,di dalam alamat terdapat jalan,kota, dan provinsi Manager => nip, nama, noHP, dan alamat, di dalam alamat terdapat jalan, kota, dan provinsi Divisi didalam Divisi terdapat 2 Divisi yaitu: Divisi produksi => nip, nama, noHP, dan alamat, di dalam alamat terdapat jalan, kota, dan provinsi Sedangkan Divisi pemasaran => nip, nama, noHP, dan alamat, di dalam alamat terdapat jalan, kota, dan provinsi Soal 2 Buatlah sebuah program bintang dengan pola segitiga ke bawah sesuai dengan output di bawah ini !! Soal 3 Buatlah sebuah program yang akan mencetak angka dari 1 hingga 20. Tetapi untuk kelipatan 2 cetak \"Sayang\", untuk angka kelipatan 3 cetak \"Cinta\" dan angka kelipatan 2 dan 3 cetak \"Sayang Cinta\" Soal 4 Buatlah sebuah array dan array didalam array / array bersarang sebuah PT semen padang terdapat sebuah struktur organisasi / srtuktur perusahaan buatlah array dengan index ke 0 yaitu struktur perusahaan, setelah itu di dalam struktur tersebut terdapat Divisi di dalam Divisi tersebut terdapat array bersarang yaitu Divisi produksi, Divisi pemasaran dan Divisi administrasi, di setiap Divisi tersebut terdapat array bersarang dengan nama leader / pemimpin Divisi tersebut output : ini adalah struktur Perusahaan Pegawai yang bernama dodo menjabat sebagai leader di Divisi Administrasi sedangkan pegawai yang bernama ayu menjabat sebagai leader di Divisi Pemasaran Soal 5 Buatlah sebuah funtion menghitung gaji karyawan seorang karyawanbekerja di PT semen padang pegawai tersebut belum menerima gaji selama 6 tahun hitunglah gaji karyawan tersebut gaji perbulan = 2.500.000 tunjangan pertahun = 600.000 bonus yang di dapatkan mengerjakan proyek 1 proyek bonus nya 400.000 pegawai tersebut mngerjakan proyek sebanyak 7x hitunglah gaji karyawan tersebut Output: Gaji bersih anda selama 6 tahun adalah Rp. 21400000","title":"Soal Ujian"},{"location":"15_page-16/#soal-ujian","text":"","title":"Soal Ujian"},{"location":"15_page-16/#soal-1","text":"Buatlah sebuah object dan object di dalam object perusahaan dengan struktur perusahaan yaitu: Direksi => nip, nama, noHP, dan alamat,di dalam alamat terdapat jalan,kota, dan provinsi Manager => nip, nama, noHP, dan alamat, di dalam alamat terdapat jalan, kota, dan provinsi Divisi didalam Divisi terdapat 2 Divisi yaitu: Divisi produksi => nip, nama, noHP, dan alamat, di dalam alamat terdapat jalan, kota, dan provinsi Sedangkan Divisi pemasaran => nip, nama, noHP, dan alamat, di dalam alamat terdapat jalan, kota, dan provinsi","title":"Soal 1"},{"location":"15_page-16/#soal-2","text":"Buatlah sebuah program bintang dengan pola segitiga ke bawah sesuai dengan output di bawah ini !!","title":"Soal 2"},{"location":"15_page-16/#soal-3","text":"Buatlah sebuah program yang akan mencetak angka dari 1 hingga 20. Tetapi untuk kelipatan 2 cetak \"Sayang\", untuk angka kelipatan 3 cetak \"Cinta\" dan angka kelipatan 2 dan 3 cetak \"Sayang Cinta\"","title":"Soal 3"},{"location":"15_page-16/#soal-4","text":"Buatlah sebuah array dan array didalam array / array bersarang sebuah PT semen padang terdapat sebuah struktur organisasi / srtuktur perusahaan buatlah array dengan index ke 0 yaitu struktur perusahaan, setelah itu di dalam struktur tersebut terdapat Divisi di dalam Divisi tersebut terdapat array bersarang yaitu Divisi produksi, Divisi pemasaran dan Divisi administrasi, di setiap Divisi tersebut terdapat array bersarang dengan nama leader / pemimpin Divisi tersebut output : ini adalah struktur Perusahaan Pegawai yang bernama dodo menjabat sebagai leader di Divisi Administrasi sedangkan pegawai yang bernama ayu menjabat sebagai leader di Divisi Pemasaran","title":"Soal 4"},{"location":"15_page-16/#soal-5","text":"Buatlah sebuah funtion menghitung gaji karyawan seorang karyawanbekerja di PT semen padang pegawai tersebut belum menerima gaji selama 6 tahun hitunglah gaji karyawan tersebut gaji perbulan = 2.500.000 tunjangan pertahun = 600.000 bonus yang di dapatkan mengerjakan proyek 1 proyek bonus nya 400.000 pegawai tersebut mngerjakan proyek sebanyak 7x hitunglah gaji karyawan tersebut Output: Gaji bersih anda selama 6 tahun adalah Rp. 21400000","title":"Soal 5"}]}
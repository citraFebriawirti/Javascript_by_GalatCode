{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"page-1-welcome/","text":"Welcome Javascript Sejarah Javascript JavaScript dibuat dan didesain oleh Brandan Eich, seorang karyawan Netscape, pada tahun 1995. Bahasa pemrograman ini mulanya disebut Mocha, kemudian diganti ke Mona, lalu menjadi LiveScript sebelum akhirnya resmi menyandang nama JavaScript. Versi pertama dari bahasa ini hanya terbatas di kalangan Netscape saja. Fungsionalitas yang ditawarkan dari bahasa pemrograman inipun terbatas. Namun, JavaScript terus dikembangkan oleh komunitas developer yang tak pernah lelah mengerjakan bahasa pemrograman ini. Pada tahun 1996, JavaScript secara resmi disebut sebagai ECMAScript, di mana ECMAScript 2 diluncurkan pada tahun 1998 dan ECMAScript 3 diperkenalkan pada tahun 1999. ECMAScript tersebut dikembangkan hingga akhirnya menjadi JavaScript sebagaimana yang kita kenal saat ini. Tak hanya lintas browser, JavaScript juga bisa digunakan di berbagai perangkat, termasuk perangkat mobile dan desktop komputer. Pengertian Javascript Javascript adalah bahasa pemrograman tingkat tinggi atau dinamis. JavaScript populer di internet dan dapat bekerja di sebagian besar penjelajah web populer seperti Google Chrome, Internet Explorer (IE), Mozilla Firefox, Netscape dan Opera .namun dianjurkan untuk menggunakan google chrome karena ada beberapa sintak js yang tidak teringtegrasi dengan browser lainnya. Kode JavaScript dapat disisipkan dalam halaman web menggunakan tag script. JavaScript merupakan salah satu teknologi inti World Wide Web selain HTML dan CSS. JavaScript membantu membuat halaman web interaktif dan merupakan bagian aplikasi web yang esensial. Awalnya hanya diimplementasi sebagai client-side dalam penjelajah web, kini engine JavaScript disisipkan ke dalam perangkat lunak lain seperti dalam server-side dalam server web dan basis data, dalam program non web seperti perangkat lunak pengolah kata dan pembaca PDF, dan sebagai runtime environment yang memungkinkan penggunaan JavaScript untuk membuat aplikasi desktop maupun mobile. Pentingnya Javascript Dalam sebuah analogi robot, javascript itu mempengaruhi pola fungsi semuanya, seperti Berdasarkan gambar diatas, bisa kita ambil kesimpulan yaitu dalam sebuah analogi robot HTML diibaratkan dengan kerangka robot, yang hanya terdiri dari kawat-kawat (konten halaman web) CSS diibaratkan dengan desain kerangka, seperti baju, topeng dan lain-lain (tata letak halaman web) JS diibaratkan dengan otak yang mampu bergerak dinamis (perilaku halaman web) SILABUS JS Klik link berikut : silabus js","title":"Welcome Javascript"},{"location":"page-1-welcome/#welcome-javascript","text":"","title":"Welcome Javascript"},{"location":"page-1-welcome/#sejarah-javascript","text":"JavaScript dibuat dan didesain oleh Brandan Eich, seorang karyawan Netscape, pada tahun 1995. Bahasa pemrograman ini mulanya disebut Mocha, kemudian diganti ke Mona, lalu menjadi LiveScript sebelum akhirnya resmi menyandang nama JavaScript. Versi pertama dari bahasa ini hanya terbatas di kalangan Netscape saja. Fungsionalitas yang ditawarkan dari bahasa pemrograman inipun terbatas. Namun, JavaScript terus dikembangkan oleh komunitas developer yang tak pernah lelah mengerjakan bahasa pemrograman ini. Pada tahun 1996, JavaScript secara resmi disebut sebagai ECMAScript, di mana ECMAScript 2 diluncurkan pada tahun 1998 dan ECMAScript 3 diperkenalkan pada tahun 1999. ECMAScript tersebut dikembangkan hingga akhirnya menjadi JavaScript sebagaimana yang kita kenal saat ini. Tak hanya lintas browser, JavaScript juga bisa digunakan di berbagai perangkat, termasuk perangkat mobile dan desktop komputer.","title":"Sejarah Javascript"},{"location":"page-1-welcome/#pengertian-javascript","text":"Javascript adalah bahasa pemrograman tingkat tinggi atau dinamis. JavaScript populer di internet dan dapat bekerja di sebagian besar penjelajah web populer seperti Google Chrome, Internet Explorer (IE), Mozilla Firefox, Netscape dan Opera .namun dianjurkan untuk menggunakan google chrome karena ada beberapa sintak js yang tidak teringtegrasi dengan browser lainnya. Kode JavaScript dapat disisipkan dalam halaman web menggunakan tag script. JavaScript merupakan salah satu teknologi inti World Wide Web selain HTML dan CSS. JavaScript membantu membuat halaman web interaktif dan merupakan bagian aplikasi web yang esensial. Awalnya hanya diimplementasi sebagai client-side dalam penjelajah web, kini engine JavaScript disisipkan ke dalam perangkat lunak lain seperti dalam server-side dalam server web dan basis data, dalam program non web seperti perangkat lunak pengolah kata dan pembaca PDF, dan sebagai runtime environment yang memungkinkan penggunaan JavaScript untuk membuat aplikasi desktop maupun mobile.","title":"Pengertian Javascript"},{"location":"page-1-welcome/#pentingnya-javascript","text":"Dalam sebuah analogi robot, javascript itu mempengaruhi pola fungsi semuanya, seperti Berdasarkan gambar diatas, bisa kita ambil kesimpulan yaitu dalam sebuah analogi robot HTML diibaratkan dengan kerangka robot, yang hanya terdiri dari kawat-kawat (konten halaman web) CSS diibaratkan dengan desain kerangka, seperti baju, topeng dan lain-lain (tata letak halaman web) JS diibaratkan dengan otak yang mampu bergerak dinamis (perilaku halaman web)","title":"Pentingnya Javascript"},{"location":"page-1-welcome/#silabus-js","text":"Klik link berikut : silabus js","title":"SILABUS JS"},{"location":"page-2-tools/","text":"Tools yang digunakan Tools yang harus dipersiapkan Visual Studio Code digunakan untuk code editor nantinya, untuk menyampaikan algoritma dari bahasa js Google Chrome digunakan untuk menampilkan dari output scripting dari js","title":"Tools yang digunakan"},{"location":"page-2-tools/#tools-yang-digunakan","text":"","title":"Tools yang digunakan"},{"location":"page-2-tools/#tools-yang-harus-dipersiapkan","text":"Visual Studio Code digunakan untuk code editor nantinya, untuk menyampaikan algoritma dari bahasa js Google Chrome digunakan untuk menampilkan dari output scripting dari js","title":"Tools yang harus dipersiapkan"},{"location":"page-3-extension/","text":"Extension yang digunakan Extension yang harus dipersiapkan Live server digunakan untuk menjalankan server lokal untuk proses debugging tampilan dan desain HTML. Live server ini akan mendeteksi perubahan di dalam file HTML, CSS, dan JS dan otomatis melakukan live reload halaman. JavaScript (ES6) code snippets digunakan untuk kerangka snippets penulisan JavaScript berbasiskan standar ES2015. Indent Rainbow digunakan untuk menambahkan warna pada jarak tab dan spasi (indent) . Cukup membantu untuk menampilkan indent pembuka dan indent penutup.","title":"Extension yang digunakan"},{"location":"page-3-extension/#extension-yang-digunakan","text":"","title":"Extension yang digunakan"},{"location":"page-3-extension/#extension-yang-harus-dipersiapkan","text":"Live server digunakan untuk menjalankan server lokal untuk proses debugging tampilan dan desain HTML. Live server ini akan mendeteksi perubahan di dalam file HTML, CSS, dan JS dan otomatis melakukan live reload halaman. JavaScript (ES6) code snippets digunakan untuk kerangka snippets penulisan JavaScript berbasiskan standar ES2015. Indent Rainbow digunakan untuk menambahkan warna pada jarak tab dan spasi (indent) . Cukup membantu untuk menampilkan indent pembuka dan indent penutup.","title":"Extension yang harus dipersiapkan"},{"location":"page-4-referensi/","text":"Referensi Melatih Skill No Course Link 1 Dicoding Dicoding 2 Hackerrank Hackerrank 3 Codewars Codewars 4 Leetcode Leetcode","title":"Referensi Melatih Skill"},{"location":"page-4-referensi/#referensi-melatih-skill","text":"No Course Link 1 Dicoding Dicoding 2 Hackerrank Hackerrank 3 Codewars Codewars 4 Leetcode Leetcode","title":"Referensi Melatih Skill"},{"location":"page-5-statement/","text":"Steatement dan Expression Analogi sebelum memahami lebih dalam apa itu statement dan expression, mari kita lihat sebuah gambar di bawah ini Expression Expression merupakan kode yang menghasilkan nilai yang terdiri dari operator dan operand berupa angka, huruf dan simbol ( Tersimpan dalam Variable, di Konstanta, di Fungsi) x + 1; // ekspresi menjumlahkan x dengan 1 8 \\* 2; // ekspresi mengalikan 8 dengan 2 sqrt(100); // ekspresi untuk menghitung Statement Statement adalah instruksi untuk melakukan sebuah aksi tertentu. Aksi ini bisa termasuk membuat variabel, melakukan perulangan, pengecekan kondisi, dll. let nama; // deklarasi nama variable if(x >= 9 ){ console.log(\"Selamat datang di kelas javascript kafekoding 2020\") }; // deklarasi pengecekan kondisi","title":"Steatement dan Expression"},{"location":"page-5-statement/#steatement-dan-expression","text":"","title":"Steatement dan Expression"},{"location":"page-5-statement/#analogi","text":"sebelum memahami lebih dalam apa itu statement dan expression, mari kita lihat sebuah gambar di bawah ini","title":"Analogi"},{"location":"page-5-statement/#expression","text":"Expression merupakan kode yang menghasilkan nilai yang terdiri dari operator dan operand berupa angka, huruf dan simbol ( Tersimpan dalam Variable, di Konstanta, di Fungsi) x + 1; // ekspresi menjumlahkan x dengan 1 8 \\* 2; // ekspresi mengalikan 8 dengan 2 sqrt(100); // ekspresi untuk menghitung","title":"Expression"},{"location":"page-5-statement/#statement","text":"Statement adalah instruksi untuk melakukan sebuah aksi tertentu. Aksi ini bisa termasuk membuat variabel, melakukan perulangan, pengecekan kondisi, dll. let nama; // deklarasi nama variable if(x >= 9 ){ console.log(\"Selamat datang di kelas javascript kafekoding 2020\") }; // deklarasi pengecekan kondisi","title":"Statement"},{"location":"page-6-komentar/","text":"Komentar Pengertian Komentar Komentar adalah intruksi yang ditulis dalam suatu program tetapi tidak dijalankan oleh komputer Macam-macam Komentar 1. Sigle Line Comment Komentar yang digunakan hanya untuk satu baris dengan menulis // // apakah kamu senang belajar di kelas javascript ? // function (){} 2. Multiple Line Comment Komentar yang digunakan untuk lebih dari satu baris dengan menulis /**/ /* Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. */","title":"Komentar"},{"location":"page-6-komentar/#komentar","text":"","title":"Komentar"},{"location":"page-6-komentar/#pengertian-komentar","text":"Komentar adalah intruksi yang ditulis dalam suatu program tetapi tidak dijalankan oleh komputer","title":"Pengertian Komentar"},{"location":"page-6-komentar/#macam-macam-komentar","text":"","title":"Macam-macam Komentar"},{"location":"page-6-komentar/#1-sigle-line-comment","text":"Komentar yang digunakan hanya untuk satu baris dengan menulis // // apakah kamu senang belajar di kelas javascript ? // function (){}","title":"1. Sigle Line Comment"},{"location":"page-6-komentar/#2-multiple-line-comment","text":"Komentar yang digunakan untuk lebih dari satu baris dengan menulis /**/ /* Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. */","title":"2. Multiple Line Comment"},{"location":"page-7-variable/","text":"Variabel Pengertian Variable Variabel umumnya digunakan untuk menyimpan informasi, data atau nilai yang akan dikelola dalam sebuah program Pada JavaScript setidaknya ada tiga cara untuk mendeklarasikan sebuah variabel, yaitu menggunakan keyword var, let, dan const. Pada versi ECMAScript 2015 (ES6) dikenalkan deklarasi variabel dengan let dan const untuk menggantikan var yang dinilai kontroversial dan rawan menimbulkan bug. Ketentuan dalam variable Berikut beberapa aturan dalam penamaan variabel yang perlu Anda ketahui: Harus dimulai dengan huruf atau underscore (_). Dapat terdiri dari huruf, angka, dan underscore (_) dengan berbagai kombinasi. Tidak boleh mengandung spasi (whitespace). Jika penamaan variabel lebih dari dua kata, tuliskan secara camelCase. Contoh firstName, lastName, catName, dll. Tidak boleh mengandung karakter spesial (! . , / \\ + * = dll.) Jenis-jenis Variable dalam Javascript Adapun berbedaan Var, Let dan const dapat dilihat di bawah ini Analogi perbedaan let dan const : Perbedaan VAR, LET dan CONST, dapat dilihat pada tabel dibawah ini : Var let Const Penugasan Bisa diubah Bisa diubah Tidak Bisa diubah Scope function-scoped block-scoped block-scoped Penjelasan detail yaitu sebagai berikut : \ud83d\ude0d 1. Penugasan Var Lihat code var kelas = \"javascript\" kelas = \"javascript di kafekoding\" console.log(kelas) // Output javascript di kafekoding Let Lihat code let nama = \"senja\" nama = \"sunrise\" nama = \"Bintang\" console.log(nama) // output : Bintang Const Lihat code const nama = \"Citra Febriawirti\" nama = \"Senja anugrah\" console.log(nama) // Output : Cannot assign to \"nama\" because it is a constant 2. Scope Var Lihat code for(var i=1; i<6; i++){ console.log(i) } console.log(i) // Output : 1 2 3 4 5 6 Let Lihat code for(let i=1; i<6; i++){ console.log(i) } console.log(i) // Output : 1 2 3 4 5 error : i is not defined","title":"Variabel"},{"location":"page-7-variable/#variabel","text":"","title":"Variabel"},{"location":"page-7-variable/#pengertian-variable","text":"Variabel umumnya digunakan untuk menyimpan informasi, data atau nilai yang akan dikelola dalam sebuah program Pada JavaScript setidaknya ada tiga cara untuk mendeklarasikan sebuah variabel, yaitu menggunakan keyword var, let, dan const. Pada versi ECMAScript 2015 (ES6) dikenalkan deklarasi variabel dengan let dan const untuk menggantikan var yang dinilai kontroversial dan rawan menimbulkan bug.","title":"Pengertian Variable"},{"location":"page-7-variable/#ketentuan-dalam-variable","text":"Berikut beberapa aturan dalam penamaan variabel yang perlu Anda ketahui: Harus dimulai dengan huruf atau underscore (_). Dapat terdiri dari huruf, angka, dan underscore (_) dengan berbagai kombinasi. Tidak boleh mengandung spasi (whitespace). Jika penamaan variabel lebih dari dua kata, tuliskan secara camelCase. Contoh firstName, lastName, catName, dll. Tidak boleh mengandung karakter spesial (! . , / \\ + * = dll.)","title":"Ketentuan dalam variable"},{"location":"page-7-variable/#jenis-jenis-variable-dalam-javascript","text":"Adapun berbedaan Var, Let dan const dapat dilihat di bawah ini Analogi perbedaan let dan const : Perbedaan VAR, LET dan CONST, dapat dilihat pada tabel dibawah ini : Var let Const Penugasan Bisa diubah Bisa diubah Tidak Bisa diubah Scope function-scoped block-scoped block-scoped Penjelasan detail yaitu sebagai berikut : \ud83d\ude0d","title":"Jenis-jenis Variable dalam Javascript"},{"location":"page-7-variable/#1-penugasan","text":"Var Lihat code var kelas = \"javascript\" kelas = \"javascript di kafekoding\" console.log(kelas) // Output javascript di kafekoding Let Lihat code let nama = \"senja\" nama = \"sunrise\" nama = \"Bintang\" console.log(nama) // output : Bintang Const Lihat code const nama = \"Citra Febriawirti\" nama = \"Senja anugrah\" console.log(nama) // Output : Cannot assign to \"nama\" because it is a constant","title":"1. Penugasan"},{"location":"page-7-variable/#2-scope","text":"Var Lihat code for(var i=1; i<6; i++){ console.log(i) } console.log(i) // Output : 1 2 3 4 5 6 Let Lihat code for(let i=1; i<6; i++){ console.log(i) } console.log(i) // Output : 1 2 3 4 5 error : i is not defined","title":"2. Scope"},{"location":"page-8-tipedata/","text":"Tipe Data Dalam pemrograman, tipe data merupakan konsep penting. Untuk dapat beroperasi pada variabel, penting untuk mengetahui sesuatu tentang tipenya. Tanpa tipe data, komputer tidak dapat menyelesaikan masalah di bawah ini: var x = 11 + \"Alvin\"; Apakah masuk akal untuk menambahkan \"Alvin\" dengan sebelas? Apakah akan menghasilkan kesalahan atau akan memberikan hasil? JavaScript akan memperlakukan contoh di atas sebagai berikut: var x = \"11\" + \"Alvin\"; 1. Tipe Data Primitiv Kali ini kita akan membahas beberapa basic tipe data yaitu tipe data primitif. => Primitif (nilai primitif, tipe data primitif) adalah data yang bukan objek dan tidak memiliki method. Dalam JavaScript, ada 6 tipe data primitif: string, number, boolean, null, undefined, symbol (ECMAScript 2015). Adapun 6 tipe data priitif dapat dijelaskan sebagai berikut : 1. Number Value dari tipe data number adalah nilai numerik. Dalam program JavaScript, tipe data number ditulis sebagai berikut: 50; // bilangan int 3.14; // bilangan desimal Pengunaannya : let umur = 20 2. String Tipe data dasar berikutnya adalah string. String digunakan untuk merepresentasikan teks. String ditulis dengan melampirkan kontennya dalam tanda kutip. Kita dapat menggunakan single quotes, double quotes, atau backticks untuk menandai string, selama tanda kutip di awal dan akhir string cocok. 'Ini adalah kelas javascript' \"Ini adalah kelas javascript\" `Ini adalah kelas javascript` Tanda kutip yang didahului oleh backslash tidak akan mengakhiri string tetapi menjadi bagian darinya. Ketika karakter \"n\" muncul setelah backslash (\\n), itu ditafsirkan sebagai baris baru. Demikian pula, \"t\" setelah backslash (\\t) berarti karakter tab. \"Ini baris pertama\\nDan ini baris kedua\"; //Output: Ini baris pertama Dan ini baris kedua Bagaimana dengan penulisan \"Tambahkan dengan \\n\" ? \"Tambahkan dengan \\\"\\\\n\\\"\" Bagimana dengan penulisan \"Hari ini adalah hari Jum'at\" ? \"Hari ini adalah hari Jum'at\" 3. Boolean Boolean seringkali digunakan untuk nilai yang hanya memiliki dua kemungkinan, seperti \"yes\" dan \"no\" atau \"on\" dan \"off\". Untuk tujuan ini, JavaScript memiliki tipe Boolean, yang hanya memiliki dua nilai, true dan false. console.log(3 > 2); // \u2192 true console.log(3 < 2); // \u2192 false Tipe Data Non Primitiv Object Array Function kok ga dijelaskan ? simak yok","title":"Tipe Data"},{"location":"page-8-tipedata/#tipe-data","text":"Dalam pemrograman, tipe data merupakan konsep penting. Untuk dapat beroperasi pada variabel, penting untuk mengetahui sesuatu tentang tipenya. Tanpa tipe data, komputer tidak dapat menyelesaikan masalah di bawah ini: var x = 11 + \"Alvin\"; Apakah masuk akal untuk menambahkan \"Alvin\" dengan sebelas? Apakah akan menghasilkan kesalahan atau akan memberikan hasil? JavaScript akan memperlakukan contoh di atas sebagai berikut: var x = \"11\" + \"Alvin\";","title":"Tipe Data"},{"location":"page-8-tipedata/#1-tipe-data-primitiv","text":"Kali ini kita akan membahas beberapa basic tipe data yaitu tipe data primitif. => Primitif (nilai primitif, tipe data primitif) adalah data yang bukan objek dan tidak memiliki method. Dalam JavaScript, ada 6 tipe data primitif: string, number, boolean, null, undefined, symbol (ECMAScript 2015). Adapun 6 tipe data priitif dapat dijelaskan sebagai berikut :","title":"1. Tipe Data Primitiv"},{"location":"page-8-tipedata/#1-number","text":"Value dari tipe data number adalah nilai numerik. Dalam program JavaScript, tipe data number ditulis sebagai berikut: 50; // bilangan int 3.14; // bilangan desimal Pengunaannya : let umur = 20","title":"1. Number"},{"location":"page-8-tipedata/#2-string","text":"Tipe data dasar berikutnya adalah string. String digunakan untuk merepresentasikan teks. String ditulis dengan melampirkan kontennya dalam tanda kutip. Kita dapat menggunakan single quotes, double quotes, atau backticks untuk menandai string, selama tanda kutip di awal dan akhir string cocok. 'Ini adalah kelas javascript' \"Ini adalah kelas javascript\" `Ini adalah kelas javascript` Tanda kutip yang didahului oleh backslash tidak akan mengakhiri string tetapi menjadi bagian darinya. Ketika karakter \"n\" muncul setelah backslash (\\n), itu ditafsirkan sebagai baris baru. Demikian pula, \"t\" setelah backslash (\\t) berarti karakter tab. \"Ini baris pertama\\nDan ini baris kedua\"; //Output: Ini baris pertama Dan ini baris kedua Bagaimana dengan penulisan \"Tambahkan dengan \\n\" ? \"Tambahkan dengan \\\"\\\\n\\\"\" Bagimana dengan penulisan \"Hari ini adalah hari Jum'at\" ? \"Hari ini adalah hari Jum'at\"","title":"2. String"},{"location":"page-8-tipedata/#3-boolean","text":"Boolean seringkali digunakan untuk nilai yang hanya memiliki dua kemungkinan, seperti \"yes\" dan \"no\" atau \"on\" dan \"off\". Untuk tujuan ini, JavaScript memiliki tipe Boolean, yang hanya memiliki dua nilai, true dan false. console.log(3 > 2); // \u2192 true console.log(3 < 2); // \u2192 false","title":"3. Boolean"},{"location":"page-8-tipedata/#tipe-data-non-primitiv","text":"Object Array Function kok ga dijelaskan ? simak yok","title":"Tipe Data Non Primitiv"},{"location":"page-9-operator/","text":"Operator Operator adalah simbol yang digunakan untuk melakukan operasi pada suatu nilai dan variabel. Operator dalam pemrograman terbagi dalam 6 jenis: Operator aritmatika; Operator Penugasan (Assignment); Opeartor relasi atau perbandingan; Operator Logika; Operator Bitwise; Operator Ternary; 1. Operator aritmatika Operator aritmatika merupakan operator untuk melakukan operasi aritmatika seperti penjumlahan, pengurangan, pembagian, perkalian, dsb. adapun soal yang dapat kita terapkan sebagai berikut : let a = 3 let b = 5 let c = 15 Nama Operator Simbol Contoh Penjumlahan + console.log(`${a} + ${b}`) Pengurangan - console.log(`${c} - ${b}`) Perkalian * console.log(`${a} * ${b}`) Pemangkatan ** console.log(`${a} ** ${b}`) Pembagian / console.log(`${c} + ${b}`) Sisa Bagi % console.log(`${c} % ${3}`) Adapun soal yang sesuai denga aritmatika dapat dilihat sebagai berikut : !! Latihan Perintah : Buatlah sebuah logika perhitungan dengan menggunakan operator aritmatika dengan hasil penjumlahan sama dengan 15 dan hasil pengurangan dengan sama dengan 1 yang terlebih dahulu dibuatkan dalam varible let dulu, selamat mengerjakan !! \ud83d\ude0e Buat jawaban di replit kirimkan linknya ke kak citra 2. Operator Penugasan Operator penugasan adalah operator yang digunakan untuk memberikan tugas kepada variabel. Biasanya digunakan untuk mengisi variabel. Nama Operator Simbol Contoh Pengisian Nilai = let nilai = 100 Pengisian dan Penambahan += console.log(nilai += 5) Pengisian dan Pengurangan -= console.log(nilai -= 5) Pengisian dan Perkalian *= console.log(nilai *= 5) Pengisian dan Pemangkatan **= console.log(nilai **=5) Pengisian dan Pembagian /= console.log(nilai /= 5) Pengisian dan Sisa bagi %= console.log(nilai %= 5) Adapun soal yang sesuai dengan penugasan dapat dilihat sebagai berikut : !! Latihan Perintah : let nama = \"Senja\" let nilai = 80 maka logika dengan operator penugasan dengan menggunakan (pengisian dan penjumlahan), semangat ya mengerjakannya !! \ud83e\udd11 3. Operator Perbandingan Operator relasi atau perbandingan adalah operator yang digunakan untuk membandingkan dua nilai. Operator perbandingan akan menghasilkan sebuah nilai boolean true dan false. Nama Operator Simbol Lebih Kecil < Lebih besar > Sama Dengan == atau === Tidak Sama dengan != Lebih Besar Sama dengan >= Lebih Kecil Sama dengan <= contoh soal yang menerapkan operator perbandingan yaitu sebagai berikut : 1. Lebih kecil dan lebih kecil sama dengan var a = 3; var b = 4; console.log(a < b); // true console.log(a <= b); // true var a = 5; var b = 5; console.log(a < b); // false console.log(a <= b); // true 2. Lebih besar dan lebih besar sama dengan var a = 3; var b = 4; console.log(a > b); // false console.log(a >= b); // false var a = 5; var b = 5; console.log(a > b); // false console.log(a >= b); // true 3. Tidak sama dengan var a = true; var benar = true; console.log(a !== benar); // false var a = 12; var b = 4; console.log(a !== b); // true var a = 7; var b = \"7\"; console.log(a !== b); // true ! var a = \"7\"; var b = \"7\"; console.log(a !== b); // false 4. Sama dengan var a = true; var benar = true; console.log(a == benar); // true var a = 12; var b = 4; console.log(a == b); // false var a = 7; var b = \"7\"; console.log(a == b); // true var a = true; var benar = true; console.log(a === benar); // true var a = 12; var b = 4; console.log(a === b); // false var a = 7; var b = \"7\"; console.log(a === b); // false ! var a = \"7\"; var b = \"7\"; console.log(a === b); // true 4. Operator Logika Operator logika digunakan untuk melakukan operasi terhadap dua nilai boolean. Nama Operator Simbol AND && OR Negasi ~ adapun contoh soal yang menerapkan operator logika, yaitu sebagai berikut : var a = true; var b = false; var hasil1 = a && b; console.log(hasil1); //false var hasil2 = a && a; console.log(hasil2); //true var hasil3 = a || b; console.log(hasil3); //true var hasil4 = !a; console.log(hasil4); //false","title":"Operator"},{"location":"page-9-operator/#operator","text":"Operator adalah simbol yang digunakan untuk melakukan operasi pada suatu nilai dan variabel. Operator dalam pemrograman terbagi dalam 6 jenis: Operator aritmatika; Operator Penugasan (Assignment); Opeartor relasi atau perbandingan; Operator Logika; Operator Bitwise; Operator Ternary;","title":"Operator"},{"location":"page-9-operator/#1-operator-aritmatika","text":"Operator aritmatika merupakan operator untuk melakukan operasi aritmatika seperti penjumlahan, pengurangan, pembagian, perkalian, dsb. adapun soal yang dapat kita terapkan sebagai berikut : let a = 3 let b = 5 let c = 15 Nama Operator Simbol Contoh Penjumlahan + console.log(`${a} + ${b}`) Pengurangan - console.log(`${c} - ${b}`) Perkalian * console.log(`${a} * ${b}`) Pemangkatan ** console.log(`${a} ** ${b}`) Pembagian / console.log(`${c} + ${b}`) Sisa Bagi % console.log(`${c} % ${3}`) Adapun soal yang sesuai denga aritmatika dapat dilihat sebagai berikut : !! Latihan Perintah : Buatlah sebuah logika perhitungan dengan menggunakan operator aritmatika dengan hasil penjumlahan sama dengan 15 dan hasil pengurangan dengan sama dengan 1 yang terlebih dahulu dibuatkan dalam varible let dulu, selamat mengerjakan !! \ud83d\ude0e Buat jawaban di replit kirimkan linknya ke kak citra","title":"1. Operator aritmatika"},{"location":"page-9-operator/#2-operator-penugasan","text":"Operator penugasan adalah operator yang digunakan untuk memberikan tugas kepada variabel. Biasanya digunakan untuk mengisi variabel. Nama Operator Simbol Contoh Pengisian Nilai = let nilai = 100 Pengisian dan Penambahan += console.log(nilai += 5) Pengisian dan Pengurangan -= console.log(nilai -= 5) Pengisian dan Perkalian *= console.log(nilai *= 5) Pengisian dan Pemangkatan **= console.log(nilai **=5) Pengisian dan Pembagian /= console.log(nilai /= 5) Pengisian dan Sisa bagi %= console.log(nilai %= 5) Adapun soal yang sesuai dengan penugasan dapat dilihat sebagai berikut : !! Latihan Perintah : let nama = \"Senja\" let nilai = 80 maka logika dengan operator penugasan dengan menggunakan (pengisian dan penjumlahan), semangat ya mengerjakannya !! \ud83e\udd11","title":"2. Operator Penugasan"},{"location":"page-9-operator/#3-operator-perbandingan","text":"Operator relasi atau perbandingan adalah operator yang digunakan untuk membandingkan dua nilai. Operator perbandingan akan menghasilkan sebuah nilai boolean true dan false. Nama Operator Simbol Lebih Kecil < Lebih besar > Sama Dengan == atau === Tidak Sama dengan != Lebih Besar Sama dengan >= Lebih Kecil Sama dengan <= contoh soal yang menerapkan operator perbandingan yaitu sebagai berikut :","title":"3. Operator Perbandingan"},{"location":"page-9-operator/#1-lebih-kecil-dan-lebih-kecil-sama-dengan","text":"var a = 3; var b = 4; console.log(a < b); // true console.log(a <= b); // true var a = 5; var b = 5; console.log(a < b); // false console.log(a <= b); // true","title":"1. Lebih kecil dan lebih kecil sama dengan"},{"location":"page-9-operator/#2-lebih-besar-dan-lebih-besar-sama-dengan","text":"var a = 3; var b = 4; console.log(a > b); // false console.log(a >= b); // false var a = 5; var b = 5; console.log(a > b); // false console.log(a >= b); // true","title":"2. Lebih besar dan lebih besar sama dengan"},{"location":"page-9-operator/#3-tidak-sama-dengan","text":"var a = true; var benar = true; console.log(a !== benar); // false var a = 12; var b = 4; console.log(a !== b); // true var a = 7; var b = \"7\"; console.log(a !== b); // true ! var a = \"7\"; var b = \"7\"; console.log(a !== b); // false","title":"3. Tidak sama dengan"},{"location":"page-9-operator/#4-sama-dengan","text":"var a = true; var benar = true; console.log(a == benar); // true var a = 12; var b = 4; console.log(a == b); // false var a = 7; var b = \"7\"; console.log(a == b); // true var a = true; var benar = true; console.log(a === benar); // true var a = 12; var b = 4; console.log(a === b); // false var a = 7; var b = \"7\"; console.log(a === b); // false ! var a = \"7\"; var b = \"7\"; console.log(a === b); // true","title":"4. Sama dengan"},{"location":"page-9-operator/#4-operator-logika","text":"Operator logika digunakan untuk melakukan operasi terhadap dua nilai boolean. Nama Operator Simbol AND && OR Negasi ~ adapun contoh soal yang menerapkan operator logika, yaitu sebagai berikut : var a = true; var b = false; var hasil1 = a && b; console.log(hasil1); //false var hasil2 = a && a; console.log(hasil2); //true var hasil3 = a || b; console.log(hasil3); //true var hasil4 = !a; console.log(hasil4); //false","title":"4. Operator Logika"}]}